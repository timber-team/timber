version: "3.7"
services:
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      # HTTP Port
      - "80:80"
      # Web UI
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres-timber:
    container_name: pgres
    image: "postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - "pgdata_timber:/var/lib/postgresql/data"
    command:
      [
        "postgres",
        "-c",
        "log_statement=mod",
        "-c",
        "log_min_error_statement=ERROR",
      ]

  redis-timber:
    container_name: rdis
    image: "redis:alpine"
    command: >
      --requirepass ${REDIS_PASS}
    ports:
      - "6379:6379"
    volumes:
      - "rdbdata_timber:/data"

  timber-api:
    command: modd
    container_name: timber-api
    image: timber-api
    build:
      context: ./api
      target: dev
    volumes:
      - "./api:/app"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      API_URL: ${API_URL}
      AUTH_KEY: ${AUTH_KEY}
      BASE_URL: ${BASE_URL}
      REDIS_ADDRESS: ${REDIS_ADDRESS}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASS: ${REDIS_PASS}
      OAUTH_GOOGLE_ID: ${OAUTH_GOOGLE_ID}
      OAUTH_GOOGLE_SECRET: ${OAUTH_GOOGLE_SECRET}
      OAUTH_GITHUB_ID: ${OAUTH_GITHUB_ID}
      OAUTH_GITHUB_SECRET: ${OAUTH_GITHUB_SECRET}
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.timber-api.rule=Host(`${HOST}`) && PathPrefix(`/api`)"
    volumes:
      - ./api:/go/src/app
    depends_on:
      - postgres-timber
      - redis-timber
      - reverse-proxy
    logging:
      driver: json-file
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"   

  timber-client:
    container_name: timber-client
    build:
      context: ./ui
      target: dev
    image: timber-client
    command: npm start
    stdin_open: true
    environment:
      BASE_URL: ${BASE_URL}
      PROJECT_GITHUB_URL: ${PROJECT_GITHUB_URL}
      PROJECT_MOTTO: ${PROJECT_MOTTO}
      FOOTER_TEXT: ${FOOTER_TEXT}
    expose:
      - "3000"
      - "1234"
    ports:
      - "1234:1234"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.timber-client.rule=Host(`${HOST}`)"
    volumes:
      - ./ui:/app
      - /app/node_modules

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ADMIN1234
      GF_SECURITY_ADMIN_USER: ADMIN
      GF_AUTH_ANONYMOUS_ENABLED: false
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
      GF_AUTH_ANONYMOUS_ORG_NAME: Public

  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    ports:
      - "3100:3100"
    command: "--config.file=/etc/loki/loki.yml"
    volumes:
      - ./loki:/etc/loki

  promtail:
    image: grafana/promtail
    container_name: promtail
    ports:
      - "9090:9090"
    command: "--config.file=/etc/promtail/promtail.yml"
    volumes:
      - ./promtail:/etc/promtail
      - /var/lib/docker:/var/lib/docker:ro


volumes:
  pgdata_timber:
  rdbdata_timber:
